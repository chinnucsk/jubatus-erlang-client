
% This file is automatically generated by msgpack-idl.
-module(stat_client).
-author('@msgpack-idl').

-include("stat_types.hrl").
-export([connect/3, connect/4, close/0, close/1]).



-export([set_config/2, get_config/1, push/3, sum/2, stddev/2, max/2, min/2, entropy/2, moment/4, save/2, load/2, get_status/1]).  
  
connect(Host,Port,Options)->
    connect(?MODULE ,Host,Port,Options).

connect(Id, Host,Port,Options)->
    gen_msgpack_rpc:start_link({local,Id},?MODULE,Host,Port,Options).

close(Id)->
    gen_msgpack_rpc:stop(Id).

close()->
    gen_msgpack_rpc:stop(?MODULE).


-spec set_config(mp_string(), config_data()) -> boolean().
set_config(Name, C) ->
    gen_msgpack_rpc:call(?MODULE, set_config, [Name, C]).

-spec get_config(mp_string()) -> config_data().
get_config(Name) ->
    gen_msgpack_rpc:call(?MODULE, get_config, [Name]).

-spec push(mp_string(), mp_string(), float()) -> boolean().
push(Name, Key, Val) ->
    gen_msgpack_rpc:call(?MODULE, push, [Name, Key, Val]).

-spec sum(mp_string(), mp_string()) -> float().
sum(Name, Key) ->
    gen_msgpack_rpc:call(?MODULE, sum, [Name, Key]).

-spec stddev(mp_string(), mp_string()) -> float().
stddev(Name, Key) ->
    gen_msgpack_rpc:call(?MODULE, stddev, [Name, Key]).

-spec max(mp_string(), mp_string()) -> float().
max(Name, Key) ->
    gen_msgpack_rpc:call(?MODULE, max, [Name, Key]).

-spec min(mp_string(), mp_string()) -> float().
min(Name, Key) ->
    gen_msgpack_rpc:call(?MODULE, min, [Name, Key]).

-spec entropy(mp_string(), mp_string()) -> float().
entropy(Name, Key) ->
    gen_msgpack_rpc:call(?MODULE, entropy, [Name, Key]).

-spec moment(mp_string(), mp_string(), non_neg_integer(), float()) -> float().
moment(Name, Key, N, C) ->
    gen_msgpack_rpc:call(?MODULE, moment, [Name, Key, N, C]).

-spec save(mp_string(), mp_string()) -> boolean().
save(Name, Id) ->
    gen_msgpack_rpc:call(?MODULE, save, [Name, Id]).

-spec load(mp_string(), mp_string()) -> boolean().
load(Name, Id) ->
    gen_msgpack_rpc:call(?MODULE, load, [Name, Id]).

-spec get_status(mp_string()) -> list({mp_string(), list({mp_string(), mp_string()})}).
get_status(Name) ->
    gen_msgpack_rpc:call(?MODULE, get_status, [Name]).


