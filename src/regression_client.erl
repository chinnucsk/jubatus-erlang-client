
% This file is automatically generated by msgpack-idl.
-module(regression_client).
-author('@msgpack-idl').

-include("regression_types.hrl").
-export([connect/3, connect/4, close/0, close/1]).



-export([set_config/2, get_config/1, train/2, estimate/2, save/2, load/2, get_status/1]).  
  
connect(Host,Port,Options)->
    connect(?MODULE ,Host,Port,Options).

connect(Id, Host,Port,Options)->
    gen_msgpack_rpc:start_link({local,Id},?MODULE,Host,Port,Options).

close(Id)->
    gen_msgpack_rpc:stop(Id).

close()->
    gen_msgpack_rpc:stop(?MODULE).


-spec set_config(mp_string(), config_data()) -> boolean().
set_config(Name, C) ->
    gen_msgpack_rpc:call(?MODULE, set_config, [Name, C]).

-spec get_config(mp_string()) -> config_data().
get_config(Name) ->
    gen_msgpack_rpc:call(?MODULE, get_config, [Name]).

-spec train(mp_string(), list({float(), datum()})) -> non_neg_integer().
train(Name, Train_data) ->
    gen_msgpack_rpc:call(?MODULE, train, [Name, Train_data]).

-spec estimate(mp_string(), list(datum())) -> list(float()).
estimate(Name, Estimate_data) ->
    gen_msgpack_rpc:call(?MODULE, estimate, [Name, Estimate_data]).

-spec save(mp_string(), mp_string()) -> boolean().
save(Name, Arg1) ->
    gen_msgpack_rpc:call(?MODULE, save, [Name, Arg1]).

-spec load(mp_string(), mp_string()) -> boolean().
load(Name, Arg1) ->
    gen_msgpack_rpc:call(?MODULE, load, [Name, Arg1]).

-spec get_status(mp_string()) -> list({mp_string(), list({mp_string(), mp_string()})}).
get_status(Name) ->
    gen_msgpack_rpc:call(?MODULE, get_status, [Name]).


