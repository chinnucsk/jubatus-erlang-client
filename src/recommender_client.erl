
% This file is automatically generated by msgpack-idl.
-module(recommender_client).
-author('@msgpack-idl').

-include("recommender_types.hrl").
-export([connect/3, connect/4, close/0, close/1]).



-export([set_config/2, get_config/1, clear_row/2, update_row/3, clear/1, complete_row_from_id/2, complete_row_from_data/2, similar_row_from_id/3, similar_row_from_data/3, decode_row/2, get_all_rows/1, similarity/3, l2norm/2, save/2, load/2, get_status/1]).  
  
connect(Host,Port,Options)->
    connect(?MODULE ,Host,Port,Options).

connect(Id, Host,Port,Options)->
    gen_msgpack_rpc:start_link({local,Id},?MODULE,Host,Port,Options).

close(Id)->
    gen_msgpack_rpc:stop(Id).

close()->
    gen_msgpack_rpc:stop(?MODULE).


-spec set_config(mp_string(), config_data()) -> boolean().
set_config(Name, C) ->
    gen_msgpack_rpc:call(?MODULE, set_config, [Name, C]).

-spec get_config(mp_string()) -> config_data().
get_config(Name) ->
    gen_msgpack_rpc:call(?MODULE, get_config, [Name]).

-spec clear_row(mp_string(), mp_string()) -> boolean().
clear_row(Name, Id) ->
    gen_msgpack_rpc:call(?MODULE, clear_row, [Name, Id]).

-spec update_row(mp_string(), mp_string(), datum()) -> boolean().
update_row(Name, Id, D) ->
    gen_msgpack_rpc:call(?MODULE, update_row, [Name, Id, D]).

-spec clear(mp_string()) -> boolean().
clear(Name) ->
    gen_msgpack_rpc:call(?MODULE, clear, [Name]).

-spec complete_row_from_id(mp_string(), mp_string()) -> datum().
complete_row_from_id(Name, Id) ->
    gen_msgpack_rpc:call(?MODULE, complete_row_from_id, [Name, Id]).

-spec complete_row_from_data(mp_string(), datum()) -> datum().
complete_row_from_data(Name, D) ->
    gen_msgpack_rpc:call(?MODULE, complete_row_from_data, [Name, D]).

-spec similar_row_from_id(mp_string(), mp_string(), integer()) -> similar_result().
similar_row_from_id(Name, Id, Size) ->
    gen_msgpack_rpc:call(?MODULE, similar_row_from_id, [Name, Id, Size]).

-spec similar_row_from_data(mp_string(), datum(), integer()) -> similar_result().
similar_row_from_data(Name, Data, Size) ->
    gen_msgpack_rpc:call(?MODULE, similar_row_from_data, [Name, Data, Size]).

-spec decode_row(mp_string(), mp_string()) -> datum().
decode_row(Name, Id) ->
    gen_msgpack_rpc:call(?MODULE, decode_row, [Name, Id]).

-spec get_all_rows(mp_string()) -> list(mp_string()).
get_all_rows(Name) ->
    gen_msgpack_rpc:call(?MODULE, get_all_rows, [Name]).

-spec similarity(mp_string(), datum(), datum()) -> float().
similarity(Name, Lhs, Rhs) ->
    gen_msgpack_rpc:call(?MODULE, similarity, [Name, Lhs, Rhs]).

-spec l2norm(mp_string(), datum()) -> float().
l2norm(Name, D) ->
    gen_msgpack_rpc:call(?MODULE, l2norm, [Name, D]).

-spec save(mp_string(), mp_string()) -> boolean().
save(Name, Id) ->
    gen_msgpack_rpc:call(?MODULE, save, [Name, Id]).

-spec load(mp_string(), mp_string()) -> boolean().
load(Name, Id) ->
    gen_msgpack_rpc:call(?MODULE, load, [Name, Id]).

-spec get_status(mp_string()) -> list({mp_string(), list({mp_string(), mp_string()})}).
get_status(Name) ->
    gen_msgpack_rpc:call(?MODULE, get_status, [Name]).


